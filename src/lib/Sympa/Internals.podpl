# $Id$

use strict;
use warnings;
use English qw(-no_match_vars);

my $module_description = '';

foreach my $pm (sort { lc $a cmp lc $b } @ARGV) {
    next
        unless $pm eq 'Sympa.pm'
        or $pm =~ m{\ASympa/(?:[^/]+/)*[A-Z]\w*[.]pm(?:[.]in)?\z};
    next if $pm =~ m{\ASympa/CLI/(?:[a-z]\w*/)*[a-z]\w*[.]pm(?:\.in)?\z};

    my $fh;
    next unless open $fh, '<', $pm;
    my $source = do { local $RS; <$fh> };
    close $fh;

    my $name = $pm;
    $name =~ s/\.pm(?:\.in)?\z//;
    $name =~ s|/|::|g;

    my $desc;
    if (    $source =~ /\n=encoding utf-8/i
        and $source =~ /\n=head1 NAME\n\s*([:\w]+)\s+-\s+([^\n]+)/) {
        $desc = $2;
        warn "$1 is deffer from $name\n" unless $1 eq $name;
    } else {
        $desc = 'TBD';
    }

    $module_description .= sprintf "=item L<%s>\n\n%s\n\n", $name, $desc;
}

printf do { local $RS; <DATA> }, $module_description;

__END__

=encoding utf-8

=head1 NAME

Sympa::Internals - Sympa internals

=head1 DESCRIPTION

Below is the list of Sympa internal modules.
To know details of each module, run:

  man Sympa::ModuleName

=head2 Modules

=over

%s

=back

=head2 Workflow

See L<Sympa::Internals::Workflow>.

=head1 SEE ALSO

L<sympa_toc(1)>.

I<Sympa Administration Manual>.
L<https://www.sympa.community/manual/>.

=cut
